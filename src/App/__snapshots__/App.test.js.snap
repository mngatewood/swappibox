// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <aside>
          <Unknown
                    film={Object {}}
                    id="scrollMe"
          />
</aside>,
        <main>
          <header
                    className="title-container"
          >
                    <Link
                              replace={false}
                              to="/"
                    >
                              <h2>
                                        SWAPIbox
                              </h2>
                    </Link>
                    <button
                              className="view-favorites"
                    >
                              View Favorites
                              <span
                                        className="count-favorites"
                              />
                    </button>
          </header>
          <section
                    className="button-container"
          >
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to="/people"
                    >
                              <button
                                        className="nav"
                              >
                                        People
                              </button>
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to="/planets"
                    >
                              <button
                                        className="nav"
                              >
                                        Planets
                              </button>
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to="/vehicles"
                    >
                              <button
                                        className="nav"
                              >
                                        Vehicles
                              </button>
                    </NavLink>
          </section>
          <section>
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              exact={true}
                              path="/people"
                              render={[Function]}
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/planets"
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/vehicles"
                    />
          </section>
</main>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown
            film={Object {}}
            id="scrollMe"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "film": Object {},
            "id": "scrollMe",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "aside",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className="title-container"
>
              <Link
                            replace={false}
                            to="/"
              >
                            <h2>
                                          SWAPIbox
                            </h2>
              </Link>
              <button
                            className="view-favorites"
              >
                            View Favorites
                            <span
                                          className="count-favorites"
                            />
              </button>
</header>,
            <section
              className="button-container"
>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to="/people"
              >
                            <button
                                          className="nav"
                            >
                                          People
                            </button>
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to="/planets"
              >
                            <button
                                          className="nav"
                            >
                                          Planets
                            </button>
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to="/vehicles"
              >
                            <button
                                          className="nav"
                            >
                                          Vehicles
                            </button>
              </NavLink>
</section>,
            <section>
              <Route
                            component={[Function]}
                            exact={true}
                            path="/"
              />
              <Route
                            exact={true}
                            path="/people"
                            render={[Function]}
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/planets"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/vehicles"
              />
</section>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  replace={false}
                  to="/"
>
                  <h2>
                                    SWAPIbox
                  </h2>
</Link>,
                <button
                  className="view-favorites"
>
                  View Favorites
                  <span
                                    className="count-favorites"
                  />
</button>,
              ],
              "className": "title-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h2>
                    SWAPIbox
</h2>,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "SWAPIbox",
                  },
                  "ref": null,
                  "rendered": "SWAPIbox",
                  "type": "h2",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "View Favorites",
                    <span
                      className="count-favorites"
/>,
                  ],
                  "className": "view-favorites",
                },
                "ref": null,
                "rendered": Array [
                  "View Favorites",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": 0,
                      "className": "count-favorites",
                    },
                    "ref": null,
                    "rendered": 0,
                    "type": "span",
                  },
                ],
                "type": "button",
              },
            ],
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/people"
>
                  <button
                                    className="nav"
                  >
                                    People
                  </button>
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/planets"
>
                  <button
                                    className="nav"
                  >
                                    Planets
                  </button>
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/vehicles"
>
                  <button
                                    className="nav"
                  >
                                    Vehicles
                  </button>
</NavLink>,
              ],
              "className": "button-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": <button
                    className="nav"
>
                    People
</button>,
                  "to": "/people",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "People",
                    "className": "nav",
                  },
                  "ref": null,
                  "rendered": "People",
                  "type": "button",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": <button
                    className="nav"
>
                    Planets
</button>,
                  "to": "/planets",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Planets",
                    "className": "nav",
                  },
                  "ref": null,
                  "rendered": "Planets",
                  "type": "button",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": <button
                    className="nav"
>
                    Vehicles
</button>,
                  "to": "/vehicles",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Vehicles",
                    "className": "nav",
                  },
                  "ref": null,
                  "rendered": "Vehicles",
                  "type": "button",
                },
                "type": [Function],
              },
            ],
            "type": "section",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
/>,
                <Route
                  exact={true}
                  path="/people"
                  render={[Function]}
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/planets"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/vehicles"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/people",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/planets",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/vehicles",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "section",
          },
        ],
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <aside>
            <Unknown
                        film={Object {}}
                        id="scrollMe"
            />
</aside>,
          <main>
            <header
                        className="title-container"
            >
                        <Link
                                    replace={false}
                                    to="/"
                        >
                                    <h2>
                                                SWAPIbox
                                    </h2>
                        </Link>
                        <button
                                    className="view-favorites"
                        >
                                    View Favorites
                                    <span
                                                className="count-favorites"
                                    />
                        </button>
            </header>
            <section
                        className="button-container"
            >
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    to="/people"
                        >
                                    <button
                                                className="nav"
                                    >
                                                People
                                    </button>
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    to="/planets"
                        >
                                    <button
                                                className="nav"
                                    >
                                                Planets
                                    </button>
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    to="/vehicles"
                        >
                                    <button
                                                className="nav"
                                    >
                                                Vehicles
                                    </button>
                        </NavLink>
            </section>
            <section>
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/"
                        />
                        <Route
                                    exact={true}
                                    path="/people"
                                    render={[Function]}
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/planets"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/vehicles"
                        />
            </section>
</main>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown
              film={Object {}}
              id="scrollMe"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "film": Object {},
              "id": "scrollMe",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "aside",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className="title-container"
>
                <Link
                                replace={false}
                                to="/"
                >
                                <h2>
                                                SWAPIbox
                                </h2>
                </Link>
                <button
                                className="view-favorites"
                >
                                View Favorites
                                <span
                                                className="count-favorites"
                                />
                </button>
</header>,
              <section
                className="button-container"
>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                to="/people"
                >
                                <button
                                                className="nav"
                                >
                                                People
                                </button>
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                to="/planets"
                >
                                <button
                                                className="nav"
                                >
                                                Planets
                                </button>
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                to="/vehicles"
                >
                                <button
                                                className="nav"
                                >
                                                Vehicles
                                </button>
                </NavLink>
</section>,
              <section>
                <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                />
                <Route
                                exact={true}
                                path="/people"
                                render={[Function]}
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/planets"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/vehicles"
                />
</section>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    replace={false}
                    to="/"
>
                    <h2>
                                        SWAPIbox
                    </h2>
</Link>,
                  <button
                    className="view-favorites"
>
                    View Favorites
                    <span
                                        className="count-favorites"
                    />
</button>,
                ],
                "className": "title-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h2>
                      SWAPIbox
</h2>,
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "SWAPIbox",
                    },
                    "ref": null,
                    "rendered": "SWAPIbox",
                    "type": "h2",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "View Favorites",
                      <span
                        className="count-favorites"
/>,
                    ],
                    "className": "view-favorites",
                  },
                  "ref": null,
                  "rendered": Array [
                    "View Favorites",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": 0,
                        "className": "count-favorites",
                      },
                      "ref": null,
                      "rendered": 0,
                      "type": "span",
                    },
                  ],
                  "type": "button",
                },
              ],
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/people"
>
                    <button
                                        className="nav"
                    >
                                        People
                    </button>
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/planets"
>
                    <button
                                        className="nav"
                    >
                                        Planets
                    </button>
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/vehicles"
>
                    <button
                                        className="nav"
                    >
                                        Vehicles
                    </button>
</NavLink>,
                ],
                "className": "button-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": <button
                      className="nav"
>
                      People
</button>,
                    "to": "/people",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "People",
                      "className": "nav",
                    },
                    "ref": null,
                    "rendered": "People",
                    "type": "button",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": <button
                      className="nav"
>
                      Planets
</button>,
                    "to": "/planets",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Planets",
                      "className": "nav",
                    },
                    "ref": null,
                    "rendered": "Planets",
                    "type": "button",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": <button
                      className="nav"
>
                      Vehicles
</button>,
                    "to": "/vehicles",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Vehicles",
                      "className": "nav",
                    },
                    "ref": null,
                    "rendered": "Vehicles",
                    "type": "button",
                  },
                  "type": [Function],
                },
              ],
              "type": "section",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
/>,
                  <Route
                    exact={true}
                    path="/people"
                    render={[Function]}
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/planets"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/vehicles"
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "exact": true,
                    "path": "/people",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/planets",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/vehicles",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "section",
            },
          ],
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
